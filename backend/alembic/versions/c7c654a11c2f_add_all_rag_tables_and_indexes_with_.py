"""add_all_rag_tables_and_indexes_with_jsonb

Revision ID: c7c654a11c2f
Revises: 951b6c8ad312
Create Date: 2025-09-27 18:07:59.899654

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector  # ADD THIS LINE

# revision identifiers, used by Alembic.
revision = 'c7c654a11c2f'
down_revision = '62c5626e7c9f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Enable pgvector extension FIRST
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('context_documents', sa.JSON(), nullable=True),
    sa.Column('tool_calls', sa.JSON(), nullable=True),
    sa.Column('tool_results', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_created_at'), 'chat_messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    op.create_index(op.f('ix_chat_messages_user_id'), 'chat_messages', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('doc_type', sa.String(), nullable=False),
    sa.Column('source_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=True),
    sa.Column('chunk_index', sa.Integer(), nullable=True),
    sa.Column('embedding', Vector(dim=1536), nullable=True),
    sa.Column('doc_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_created_at'), 'documents', ['created_at'], unique=False)
    op.create_index(op.f('ix_documents_doc_type'), 'documents', ['doc_type'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_source_id'), 'documents', ['source_id'], unique=False)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.create_table('emails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gmail_id', sa.String(), nullable=False),
    sa.Column('thread_id', sa.String(), nullable=True),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('from_email', sa.String(), nullable=True),
    sa.Column('from_name', sa.String(), nullable=True),
    sa.Column('to_emails', sa.JSON(), nullable=True),
    sa.Column('cc_emails', sa.JSON(), nullable=True),
    sa.Column('body_text', sa.Text(), nullable=True),
    sa.Column('body_html', sa.Text(), nullable=True),
    sa.Column('snippet', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('labels', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_important', sa.Boolean(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emails_date'), 'emails', ['date'], unique=False)
    op.create_index(op.f('ix_emails_from_email'), 'emails', ['from_email'], unique=False)
    op.create_index(op.f('ix_emails_gmail_id'), 'emails', ['gmail_id'], unique=True)
    op.create_index(op.f('ix_emails_id'), 'emails', ['id'], unique=False)
    op.create_index(op.f('ix_emails_is_processed'), 'emails', ['is_processed'], unique=False)
    op.create_index(op.f('ix_emails_thread_id'), 'emails', ['thread_id'], unique=False)
    op.create_index(op.f('ix_emails_user_id'), 'emails', ['user_id'], unique=False)
    op.create_table('hubspot_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hubspot_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hubspot_contacts_email'), 'hubspot_contacts', ['email'], unique=False)
    op.create_index(op.f('ix_hubspot_contacts_hubspot_id'), 'hubspot_contacts', ['hubspot_id'], unique=True)
    op.create_index(op.f('ix_hubspot_contacts_id'), 'hubspot_contacts', ['id'], unique=False)
    op.create_index(op.f('ix_hubspot_contacts_is_processed'), 'hubspot_contacts', ['is_processed'], unique=False)
    op.create_index(op.f('ix_hubspot_contacts_user_id'), 'hubspot_contacts', ['user_id'], unique=False)
    op.create_table('instructions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('trigger_type', sa.String(), nullable=True),
    sa.Column('trigger_conditions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_instructions_id'), 'instructions', ['id'], unique=False)
    op.create_index(op.f('ix_instructions_is_active'), 'instructions', ['is_active'], unique=False)
    op.create_index(op.f('ix_instructions_user_id'), 'instructions', ['user_id'], unique=False)
    op.create_table('hubspot_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hubspot_id', sa.String(), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['hubspot_contacts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hubspot_notes_contact_id'), 'hubspot_notes', ['contact_id'], unique=False)
    op.create_index(op.f('ix_hubspot_notes_hubspot_id'), 'hubspot_notes', ['hubspot_id'], unique=True)
    op.create_index(op.f('ix_hubspot_notes_id'), 'hubspot_notes', ['id'], unique=False)
    op.create_index(op.f('ix_hubspot_notes_is_processed'), 'hubspot_notes', ['is_processed'], unique=False)
    op.create_index(op.f('ix_hubspot_notes_user_id'), 'hubspot_notes', ['user_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'WAITING', 'COMPLETED', 'FAILED', name='taskstatus'), nullable=True),
    sa.Column('memory', sa.JSON(), nullable=True),
    sa.Column('related_email_id', sa.String(), nullable=True),
    sa.Column('related_contact_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['related_contact_id'], ['hubspot_contacts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_user_id'), 'tasks', ['user_id'], unique=False)
    # ### end Alembic commands ###

    # Create vector indexes AFTER tables exist
    op.execute("""
        CREATE INDEX IF NOT EXISTS documents_embedding_idx 
        ON documents 
        USING ivfflat (embedding vector_cosine_ops)
        WITH (lists = 100);
    """)
    
    op.create_index('idx_documents_user_type', 'documents', ['user_id', 'doc_type'])
    op.create_index('idx_documents_source', 'documents', ['doc_type', 'source_id'])
    
    # This will work now because doc_metadata is JSONB
    op.execute("""
        CREATE INDEX IF NOT EXISTS idx_documents_doc_metadata 
        ON documents USING gin(doc_metadata jsonb_path_ops);
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_user_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_hubspot_notes_user_id'), table_name='hubspot_notes')
    op.drop_index(op.f('ix_hubspot_notes_is_processed'), table_name='hubspot_notes')
    op.drop_index(op.f('ix_hubspot_notes_id'), table_name='hubspot_notes')
    op.drop_index(op.f('ix_hubspot_notes_hubspot_id'), table_name='hubspot_notes')
    op.drop_index(op.f('ix_hubspot_notes_contact_id'), table_name='hubspot_notes')
    op.drop_table('hubspot_notes')
    op.drop_index(op.f('ix_instructions_user_id'), table_name='instructions')
    op.drop_index(op.f('ix_instructions_is_active'), table_name='instructions')
    op.drop_index(op.f('ix_instructions_id'), table_name='instructions')
    op.drop_table('instructions')
    op.drop_index(op.f('ix_hubspot_contacts_user_id'), table_name='hubspot_contacts')
    op.drop_index(op.f('ix_hubspot_contacts_is_processed'), table_name='hubspot_contacts')
    op.drop_index(op.f('ix_hubspot_contacts_id'), table_name='hubspot_contacts')
    op.drop_index(op.f('ix_hubspot_contacts_hubspot_id'), table_name='hubspot_contacts')
    op.drop_index(op.f('ix_hubspot_contacts_email'), table_name='hubspot_contacts')
    op.drop_table('hubspot_contacts')
    op.drop_index(op.f('ix_emails_user_id'), table_name='emails')
    op.drop_index(op.f('ix_emails_thread_id'), table_name='emails')
    op.drop_index(op.f('ix_emails_is_processed'), table_name='emails')
    op.drop_index(op.f('ix_emails_id'), table_name='emails')
    op.drop_index(op.f('ix_emails_gmail_id'), table_name='emails')
    op.drop_index(op.f('ix_emails_from_email'), table_name='emails')
    op.drop_index(op.f('ix_emails_date'), table_name='emails')
    op.drop_table('emails')
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_source_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_doc_type'), table_name='documents')
    op.drop_index(op.f('ix_documents_created_at'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_messages_user_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_created_at'), table_name='chat_messages')
    op.drop_table('chat_messages')
    # ### end Alembic commands ###